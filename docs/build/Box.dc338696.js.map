{"version":3,"sources":["../src/components/Box.vue"],"names":[],"mappings":";AA8CA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACA,KAAA,MACA,MAAA,CAIA,MAAA,CACA,KAAA,OACA,QAAA,WAGA,QAAA,CASA,cAAA,SAAA,EAAA,GAWA,KAAA,MAAA,qBA/BA,QAAA,QAAA","file":"Box.dc338696.js","sourceRoot":"..","sourcesContent":["<template>\n  <section class=\"wrapper\">\n    <header>\n      {{title}}\n      <div class=\"opts\">\n        <!-- @slot Here should go all the top header options -->\n        <slot name=\"options\"></slot>\n      </div>\n    </header>\n    <div class='inner-content'>\n      <!-- @slot Main, central, content of the component -->\n      <slot />\n    </div>\n  </section>\n</template>\n\n<script>\n/**\n * This component is just a Box with border.\n * It serves as an example of how you can incorporate\n * components together.\n * \n * Component also has slots, methods and events.\n *\n * @component\n * @example <caption>Basic usage just with the default slot</caption>\n * <Box>\n *   I am inside a slot\n * </Box>\n * \n * @example <caption>Using second component inside</caption>\n * <Box>\n *   <ProgressBar :spent=\"spent\" :remaining=\"50\"></ProgressBar>\n * </Box>\n * \n* @example <caption>Example of passing an entire component in a preview</caption>\n * {\n *   template: `<Box>\n *     <ProgressBar :spent=\"spent\" :remaining=\"50\"></ProgressBar>\n *     <ProgressBar :spent=\"50\" :remaining=\"50\" style=\"margin-top: 20px\"></ProgressBar>\n *   </Box>`,\n *   data: function() {\n *     return {spent: 223};\n *   }\n * }\n */\nexport default {\n  name: \"Box\",\n  props: {\n    /**\n     * This will be in the header\n     */\n    title: {\n      type: String,\n      default: \"My box\"\n    }\n  },\n  methods: {\n    /**\n     * Also, you can describe methods for each component\n     * the same as you would do this in regular @jsdoc\n     * documented file\n     * \n     * @param {string} prop1      some example property\n     * @param {string} prop2      other property\n     */\n    exampleMethod(prop1, prop2) {\n      // method body\n\n      // The method could even throw an event\n      /**\n       * This event could be thrown by component in case\n       * of some kind of unexpected behaviour.\n       * \n       * @category API\n       * @event unexpectedEvent\n       */\n      this.$emit('unexpecteEvent')\n    }\n  }\n}\n</script>\n\n<style scoped>\n  section.wrapper {\n    background: #fff;\n    border: 1px solid #DADADA;\n    border-radius: 4px;\n    padding: 32px;\n  }\n\n  section.wrapper > header {\n    font-size: 18px;\n    color: #211D1A;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n</style>"]}